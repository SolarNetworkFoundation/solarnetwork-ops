#!/bin/sh
# 
# PROVIDE: solarin
# REQUIRE: NETWORKING
# KEYWORD: shutdown
#
# SysV init script for the SolarIn daemon for Eclipse Virgo. 
# Designed to be run as an /etc/init.d service by the root user.
#
# Set JAVA_HOME to the path to your JDK or JRE.
# 
# Set RUNAS to the name of the user to run the process as. The script
# will use "su" to run the node as this user, in the background.

export JAVA_HOME=/usr/local
VIRGO_HOME=/usr/local/opt/virgo/solarin
PID_FILE=${VIRGO_HOME}/work/solarnet.pid
RUNAS=virgo

START_CMD="${VIRGO_HOME}/bin/sn-start.sh"

. /etc/rc.subr

name="solarin"
rcvar="${name}_enable"
extra_commands="status"
pidfile="${PID_FILE}"
start_cmd="${name}_start"
stop_cmd="${name}_stop"
status_cmd="${name}_status"

load_rc_config $name
: ${solarin_enable:=no}

# function to check status
solarin_status () {
	pid=
	run=
	if [ -e $PID_FILE ]; then
		pid=`cat $PID_FILE`
		run=`ps -o pid= -p $pid`
	fi
	if [ -n "$run" ]; then
		echo "SolarIn is running (PID $pid)"
	else
		echo "SolarIn does not appear to be running."
	fi
}

solarin_start () {
	echo "Starting SolarIn server ${VIRGO_HOME}."
	if [ -d "${VIRGO_HOME}/work" ]; then
		find ${VIRGO_HOME}/work ! -name work  -prune -type f -name '*.index' -delete
	fi
	su -m $RUNAS -c "nohup ${START_CMD} </dev/null >/dev/null &" >/dev/null 2>&1
}

	
solarin_stop () {
	pid=
	run=
	if [ -e $PID_FILE ]; then
		pid=`cat $PID_FILE`
		run=`ps -o pid= -p $pid`
	fi
	if [ -n "$run" ]; then
		echo "Stopping SolarIn server $pid"
		su -m $RUNAS -c "kill $pid"
	else
		echo SolarIn does not appear to be running.
	fi
}

run_rc_command "$1"
