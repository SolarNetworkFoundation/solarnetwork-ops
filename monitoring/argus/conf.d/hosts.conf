/*
 * Host definitions with object attributes
 * used for apply rules for Service, Notification,
 * Dependency and ScheduledDowntime objects.
 *
 * Tip: Use `icinga2 object list --type Host` to
 * list all host objects after running
 * configuration validation (`icinga2 daemon -C`).
 */

/*
 * This is an example host based on your
 * local host's FQDN. Specify the NodeName
 * constant in `constants.conf` or use your
 * own description, e.g. "db-host-1".
 */

object Host NodeName {
  /* Import the default host template defined in `templates.conf`. */
  import "generic-host"

  /* Specify the address attributes for checks e.g. `ssh` or `http`. */
  address = "127.0.0.1"
  address6 = "::1"

  /* Set custom attribute `os` for hostgroup assignment in `groups.conf`. */
  vars.os = "Linux"

  /* Define http vhost attributes for service apply rules in `services.conf`. */
  vars.http_vhosts["http"] = {
    http_uri = "/"
  }
  /* Uncomment if you've sucessfully installed Icinga Web 2. */
  //vars.http_vhosts["Icinga Web 2"] = {
  //  http_uri = "/icingaweb2"
  //}

  /* Define disks and attributes for service apply rules in `services.conf`. */
  vars.disks["disk"] = {
    /* No parameters. */
  }
  vars.disks["disk /"] = {
    disk_partitions = "/"
  }

  /* Define notification mail attributes for notification apply rules in `notifications.conf`. */
  vars.notification["mail"] = {
    /* The UserGroup `icingaadmins` is defined in `users.conf`. */
    groups = [ "icingaadmins" ]
  }
}

object Host "SolarIn" {
        import "generic-host-no-ping"

        address = "in.solarnetwork.net"
        vars.os = "FreeBSD"

        vars.ping_wrta = 250
        vars.ping_wpl = 5
        vars.ping_crta = 500
        vars.ping_cpl = 10

        vars.http_vhosts["in.solarnetwork.net"] = {
                http_vhost = "$address$"
                http_ssl = true
                http_sni = true
                http_certificate = 15
                http_method = "GET"
                http_timeout = 60
        }

        vars.http_vhosts["SolarIn"] = {
                http_vhost = "$address$"
                http_port = 443
                http_uri = "/solarin/ping"
                http_header = "Accept: application/json"
                http_ssl = true
                http_sni = true
                http_method = "GET"
                http_string = "\"allGood\":true"
                http_timeout = 60
        }

	vars.notification["mail"] = {
		groups = ["solarnetwork-admins"]
	}
}

object Host "SolarJobs" {
        import "generic-host-no-ping"

        address = "solarjobs.solarnetwork"
        vars.os = "Linux"

        vars.http_vhosts["SolarJobs"] = {
                http_vhost = "$address$"
                http_port = 9080
                http_uri = "/solarjobs/ping"
                http_header = "Accept: application/json"
                http_ssl = false
                http_method = "GET"
                http_string = "\"allGood\":true"
                http_timeout = 60
        }

        vars.notification["mail"] = {
                groups = ["solarnetwork-admins"]
        }
}

object Host "SolarQuery" {
        import "generic-host-no-ping"

        address = "solarquery.solarnetwork"
        vars.os = "Linux"

        vars.http_vhosts["SolarQuery"] = {
                http_vhost = "$address$"
                http_port = 9082
                http_uri = "/solarquery/ping"
                http_header = "Accept: application/json"
                http_ssl = false
                http_method = "GET"
                http_string = "\"allGood\":true"
                http_timeout = 60
        }

        vars.notification["mail"] = {
                groups = ["solarnetwork-admins"]
        }
}

object Host "SolarUser" {
        import "generic-host-no-ping"

        address = "solaruser.solarnetwork"
        vars.os = "Linux"

        vars.http_vhosts["SolarUser"] = {
                http_vhost = "$address$"
                http_port = 9081
                http_uri = "/solaruser/ping"
                http_header = "Accept: application/json"
                http_ssl = false
                http_method = "GET"
                http_string = "\"allGood\":true"
                http_timeout = 60
        }

        vars.notification["mail"] = {
                groups = ["solarnetwork-admins"]
        }
}

object Host "SolarNetwork CA" {
        import "generic-host-no-ping"

        address = "ca.solarnetwork.net"
        vars.os = "Linux"
        vars.http_vhosts["Dogtag"] = {
        http_vhost = "$address$"
		http_port = 8443
        http_uri = "/"
		http_certificate = 30
        http_ssl = true
		http_ignore_body = true
        http_timeout = 60
        }

	vars.notification["mail"] = {
		groups = ["solarnetwork-admins"]
	}
}

object Host "SolarOSCP-FP" {
        import "generic-host-no-ping"

        address = "oscp-fp.solarnetwork"
        vars.os = "Linux"

        vars.http_vhosts["SolarOSCP-FP"] = {
                http_vhost = "$address$"
                http_port = 9084
                http_uri = "/ping"
                http_header = "Accept: application/json"
                http_ssl = false
                http_method = "GET"
                http_string = "\"allGood\":true"
                http_timeout = 60
        }

        vars.notification["mail"] = {
                groups = ["solarnetwork-admins"]
        }
}
