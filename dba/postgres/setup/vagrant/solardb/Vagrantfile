vm_define="solardb"
vm_name="SolarNet DB"
vm_box="freebsd/FreeBSD-11.2-RELEASE"
vm_box_version=">= 2018.06.22"
cpu_count=1
memory_size=2048
gui=false
disk_journal="disk/journal.vmdk"
disk_journal_mb=512
disk_data="disk/data.vmdk"
disk_data_mb=4096
disk_index="disk/index.vmdk"
disk_index_mb=4096
setup_path="/vagrant/bin/setup-solardb-freebsd.sh"
setup_args="-u"

# Read any user specific configuration overrides - cater for this file not existing
local_env_config_file="Vagrantfile.local"
begin
	localsettings = File.read local_env_config_file
	eval localsettings
	rescue Errno::ENOENT
end

Vagrant.configure("2") do |config|
	config.vm.define vm_define
	config.vm.box = vm_box
	config.vm.box_version = vm_box_version
	config.vm.guest = :freebsd
	config.vm.network "private_network", type: "dhcp"
	
	config.vm.synced_folder ".", "/vagrant", type: "rsync", id: "vagrant-root", :mount_options => ["dmode=755"]
	config.vm.synced_folder "../../timescaledb", "/db-init", type: "rsync", id: "tsdb-init", :mount_options => ["dmode=755"]
	
	config.ssh.shell = "sh"

	config.vm.provision :shell, inline: "#{setup_path} #{setup_args}"

	config.vm.provider "virtualbox" do |v|
		v.gui = gui
		v.memory = memory_size
		v.cpus = cpu_count
		v.name = vm_name
		
		unless File.exist?(disk_journal)
			# we also assume the SAS controller does not exist yet here... and create it; no good way found
			# to test for existence of controller and VBoxManage throws exception if it already exists
			v.customize ["storagectl", :id, "--name", "SAS", "--add", "sas", "--portcount", 4]
			v.customize ["createmedium", "disk", "--filename", disk_journal, "--format", "vmdk", "--variant", "Split2G", "--size", disk_journal_mb]
		end
		unless File.exist?(disk_data)
			v.customize ["createmedium", "disk", "--filename", disk_data, "--format", "vmdk", "--variant", "Split2G", "--size", disk_data_mb]
		end
		unless File.exist?(disk_index)
			v.customize ["createmedium", "disk", "--filename", disk_index, "--format", "vmdk", "--variant", "Split2G", "--size", disk_index_mb]
		end
		
		v.customize ["storageattach", :id, "--storagectl", "SAS", "--port", 1, "--device", 0, "--type", "hdd", "--medium", disk_journal]
		v.customize ["storageattach", :id, "--storagectl", "SAS", "--port", 2, "--device", 0, "--type", "hdd", "--medium", disk_data]
		v.customize ["storageattach", :id, "--storagectl", "SAS", "--port", 3, "--device", 0, "--type", "hdd", "--medium", disk_index]
	end

	config.vm.provider "vmware_desktop" do |v|
		v.gui = gui
		v.vmx["memsize"] = memory_size
		v.vmx["numvcpus"] = cpu_count
		v.vmx["ethernet0.pcislotnumber"] = "33"
		v.vmx["ethernet1.pcislotnumber"] = "18"
	end

end

